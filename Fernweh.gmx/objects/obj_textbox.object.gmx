<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>max_width = 400;
selected = false;
blink = false;
txt = "";
alarm[0] = room_speed;
can_click = true;
fadeIn = 0;
fadeOut = 0;
chatMessageAlpha = 0.25;
slideUpToggle = room_height - 274;
targetHeight = room_height - 274;
bottom = room_height - 42;
top = room_height - 274;
inkFade = 0.25;
inkSoak = 0.05;
inkFade1 = 0.65;
line1 = "";
textHeight = room_height - 30;
textAlpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (blink = false) {
    blink = true;
} else {
    blink = false;
}

alarm[0] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (selected == true &amp;&amp; keyboard_check_pressed(vk_escape)) {
    selected = false;
}

if (selected == false) {
    txt = "";
    keyboard_string = txt;
    fadeIn = 0;
}

if (selected == true &amp;&amp; fadeIn &lt; 0.05) {
    fadeIn += 0.005;
    fadeOut = fadeIn;
} else if (selected == false &amp;&amp; fadeOut &gt; 0) {
    fadeOut -= 0.005;
}

if (selected == true) {
    if (inkFade &gt; 0) {
        inkFade -= 0.25 / (room_speed / 12);
    }
    if (inkFade1 &lt; 0.65) {
        inkFade1 += 0.65 / (room_speed / 12);
    }
    if (inkSoak &lt; 0.3 &amp;&amp; inkFade &gt; 0) {
        inkSoak += 0.25 / (room_speed / 8);
    } else if (inkSoak &gt; 0.05) {
        inkSoak -= 0.25 / (room_speed / 8);
    }
} else {
    if (inkFade &lt; 0.25) {
        inkFade += 0.25 / (room_speed / 12);
    }
    if (inkFade1 &gt; 0) {
        inkFade1 -= 0.65 / (room_speed / 12);
    }
    if (inkSoak &lt; 0.3 &amp;&amp; inkFade &lt; 0.25) {
        inkSoak += 0.25 / (room_speed / 8);
    } else if (inkSoak &gt; 0.05) {
        inkSoak -= 0.25 / (room_speed / 8);
    }
}

animation_slideUp();

if (mouse_check_button_pressed(mb_left)) {
    if (mouse_x &gt; 25 &amp;&amp; mouse_x &lt; 450 &amp;&amp; mouse_y &lt; room_height - 10 &amp;&amp; mouse_y &gt; room_height - 38) {
        selected = true;
    }
}

if (selected == true &amp;&amp; keyboard_check_pressed(vk_enter)) {
    if (line1 != "") {
        line1 = "";
        textHeight = room_height - 30;
        textAlpha = 0;
    }
    line1 = txt;
    txt = "";
    keyboard_string = txt;
} else if (selected == false &amp;&amp; keyboard_check_pressed(vk_enter)) {
    selected = true;
}

if (line1 != "") {
    if (textHeight &gt; room_height - 46) {
        textHeight -= 128 / room_speed;
    }
    if (textAlpha &lt; 0.65) {
        textAlpha += 0.65 / room_speed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (selected == true) {
    if (string_width(keyboard_string) &lt; max_width) {
        txt = keyboard_string;
    } else {
        keyboard_string = txt;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (can_click) {
    selected = true;
    keyboard_string = txt;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_arial);
draw_set_halign(fa_left);
draw_set_valign(fa_center);

draw_set_alpha(0.05);
draw_set_colour(c_white);

if (selected) {
    draw_set_alpha(fadeIn);
} else {
    draw_set_alpha(fadeOut);
}
draw_rectangle(25, room_height - 42, 450, slideUpToggle, false);

draw_set_alpha(inkSoak);
draw_rectangle(25, room_height - 10, 450, room_height - 38, false);

draw_set_alpha(0.65);

if (selected == false) {
    draw_set_alpha(inkFade);
    draw_text(33, room_height - 24, "Press enter to start typing.");
} else {
    draw_set_alpha(inkFade);
    draw_text(33, room_height - 24, "Press enter to start typing.");
    
    draw_set_alpha(inkFade1);
    if (blink == false) {
        draw_text(33, room_height - 24, txt);
    } else {
        draw_text(33, room_height - 24, txt + "|");
    }
}

draw_set_alpha(textAlpha);
draw_set_halign(fa_left);
draw_set_valign(fa_bottom);

if (selected == true) {
    draw_text(33, textHeight, line1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
